"use strict";var fs=require("fs"),marked=require("marked"),fileHound=require("filehound"),path=require("path"),chalk=require("chalk"),isDirOrFile=function(a){return new Promise(function(b,c){fs.lstat(a,function(d,e){return d?d.code:void(e.isDirectory()?readDir(a).then(function(a){var c=a.map(function(a){return readFile(a)});Promise.all(c)// ambas llamadas se hacen simultaneamente
.then(function(a){return b(a[c.length-1])})})["catch"](function(a){return c(a)}):fileMD(a))})})},links=[],readFile=function(a){return new Promise(function(b,c){fs.readFile(a,"utf8",function(d,e){if(d)c(d);else{var f=new marked.Renderer;f.link=function(b,c,d){links.push({file:a,href:b,text:d})},marked(e,{renderer:f}),b(links)}})})},fileMD=function(a){return new Promise(function(b,c){".md"===path.extname(a)?readFile(a).then(function(a){b(a)}):c(console.log(chalk.red("Error: el archivo No es .md")))})},readDir=function(a){return new Promise(function(b){fileHound.create().paths(a).ext("md").find().then(function(a){b(a)})["catch"](function(a){reject(a)})})};module.exports={isDirOrFile:isDirOrFile,readFile:readFile,readDir:readDir,fileMD:fileMD};